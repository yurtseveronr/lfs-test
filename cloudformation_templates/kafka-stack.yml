AWSTemplateFormatVersion: '2010-09-09'
Description: 'Kafka Stack - MSK Cluster with IAM Auth'

Parameters:
  EnvironmentName:
    Description: Environment name prefix
    Type: String
    Default: onur-master
  
  NetworkStackName:
    Description: Network stack name to import values from
    Type: String
    Default: network-stack

Resources:
  # Security Group for MSK
  MSKSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-MSK-SG
      GroupDescription: Security group for MSK cluster
      VpcId:
        Fn::ImportValue: !Sub ${NetworkStackName}-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 9098
          ToPort: 9098
          CidrIp: 10.0.0.0/16
          Description: Kafka IAM auth
        - IpProtocol: tcp
          FromPort: 2181
          ToPort: 2181
          CidrIp: 10.0.0.0/16
          Description: Zookeeper
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-MSK-SG

  # Security Group Ingress Rules (self-referencing)
  MSKSecurityGroupIngressPeer:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref MSKSecurityGroup
      IpProtocol: tcp
      FromPort: 2888
      ToPort: 2888
      SourceSecurityGroupId: !Ref MSKSecurityGroup
      Description: Zookeeper peer

  MSKSecurityGroupIngressLeader:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref MSKSecurityGroup
      IpProtocol: tcp
      FromPort: 3888
      ToPort: 3888
      SourceSecurityGroupId: !Ref MSKSecurityGroup
      Description: Zookeeper leader

  # MSK Configuration - sadece desteklenen basic ayarlar
  MSKConfiguration:
    Type: AWS::MSK::Configuration
    Properties:
      Name: !Sub ${EnvironmentName}-config
      KafkaVersionsList: 
        - 2.8.1
      ServerProperties: |
        auto.create.topics.enable=true
        default.replication.factor=2
        min.insync.replicas=1
        num.partitions=3
        log.retention.hours=168
        log.segment.bytes=1073741824
        log.cleanup.policy=delete

  # MSK Cluster
  MSKCluster:
    Type: AWS::MSK::Cluster
    Properties:
      ClusterName: !Sub ${EnvironmentName}-msk
      KafkaVersion: 2.8.1
      NumberOfBrokerNodes: 2
      
      BrokerNodeGroupInfo:
        InstanceType: kafka.t3.small
        ClientSubnets:
          - Fn::Select:
            - 0
            - Fn::Split:
              - ','
              - Fn::ImportValue: !Sub ${NetworkStackName}-PrivateSubnets
          - Fn::Select:
            - 1
            - Fn::Split:
              - ','
              - Fn::ImportValue: !Sub ${NetworkStackName}-PrivateSubnets  
        SecurityGroups:
          - !Ref MSKSecurityGroup
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 20

      ClientAuthentication:
        Sasl:
          Iam:
            Enabled: true

      EncryptionInfo:
        EncryptionInTransit:
          ClientBroker: TLS
          InCluster: true

      ConfigurationInfo:
        Arn: !GetAtt MSKConfiguration.Arn
        Revision: 1

      Tags:
        Environment: !Ref EnvironmentName
        Service: MSK

  # Secret Manager - endpoints i√ßin (cluster ARN olmadan)
  MSKEndpointsSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${EnvironmentName}/msk/endpoints
      Description: MSK Cluster Endpoints
      SecretString: !Sub |
        {
          "cluster_name": "${EnvironmentName}-msk",
          "region": "${AWS::Region}"
        }

Outputs:
  MSKClusterArn:
    Description: MSK Cluster ARN
    Value: !Ref MSKCluster

  MSKClusterName:
    Description: MSK Cluster Name
    Value: !Sub ${EnvironmentName}-msk

  EndpointsSecretName:
    Description: Secret name for MSK endpoints
    Value: !Sub ${EnvironmentName}/msk/endpoints