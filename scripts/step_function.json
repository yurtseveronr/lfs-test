{
  "Comment": "Complete ETL and Personalize setup with Glue jobs",
  "StartAt": "RunGlueJobs",
  "States": {
    "RunGlueJobs": {
      "Type": "Parallel",
      "Comment": "Run Glue ETL jobs for both movies and TV series in parallel",
      "Branches": [
        {
          "StartAt": "StartMoviesGlueJob",
          "States": {
            "StartMoviesGlueJob": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:glue:startJobRun",
              "Parameters": {
                "JobName": "movies_etl_job"
              },
              "ResultPath": "$.moviesGlueJobRun",
              "Next": "WaitMoviesGlueJob"
            },
            "WaitMoviesGlueJob": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "CheckMoviesGlueJob"
            },
            "CheckMoviesGlueJob": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:glue:getJobRun",
              "Parameters": {
                "JobName": "movies_etl_job",
                "RunId.$": "$.moviesGlueJobRun.JobRunId"
              },
              "ResultPath": "$.moviesGlueJobStatus",
              "Next": "IsMoviesGlueJobComplete"
            },
            "IsMoviesGlueJobComplete": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.moviesGlueJobStatus.JobRun.JobRunState",
                  "StringEquals": "SUCCEEDED",
                  "Next": "MoviesGlueJobSuccess"
                },
                {
                  "Variable": "$.moviesGlueJobStatus.JobRun.JobRunState",
                  "StringEquals": "FAILED",
                  "Next": "MoviesGlueJobFailed"
                }
              ],
              "Default": "WaitMoviesGlueJob"
            },
            "MoviesGlueJobSuccess": {
              "Type": "Pass",
              "Result": "Movies ETL job completed successfully",
              "End": true
            },
            "MoviesGlueJobFailed": {
              "Type": "Fail",
              "Cause": "Movies Glue ETL job failed"
            }
          }
        },
        {
          "StartAt": "StartTVSeriesGlueJob",
          "States": {
            "StartTVSeriesGlueJob": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:glue:startJobRun",
              "Parameters": {
                "JobName": "tv-series_etl_job"
              },
              "ResultPath": "$.tvSeriesGlueJobRun",
              "Next": "WaitTVSeriesGlueJob"
            },
            "WaitTVSeriesGlueJob": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "CheckTVSeriesGlueJob"
            },
            "CheckTVSeriesGlueJob": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:glue:getJobRun",
              "Parameters": {
                "JobName": "tv-series_etl_job",
                "RunId.$": "$.tvSeriesGlueJobRun.JobRunId"
              },
              "ResultPath": "$.tvSeriesGlueJobStatus",
              "Next": "IsTVSeriesGlueJobComplete"
            },
            "IsTVSeriesGlueJobComplete": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.tvSeriesGlueJobStatus.JobRun.JobRunState",
                  "StringEquals": "SUCCEEDED",
                  "Next": "TVSeriesGlueJobSuccess"
                },
                {
                  "Variable": "$.tvSeriesGlueJobStatus.JobRun.JobRunState",
                  "StringEquals": "FAILED",
                  "Next": "TVSeriesGlueJobFailed"
                }
              ],
              "Default": "WaitTVSeriesGlueJob"
            },
            "TVSeriesGlueJobSuccess": {
              "Type": "Pass",
              "Result": "TV Series ETL job completed successfully",
              "End": true
            },
            "TVSeriesGlueJobFailed": {
              "Type": "Fail",
              "Cause": "TV Series Glue ETL job failed"
            }
          }
        }
      ],
      "Next": "CreateMoviesDatasetGroup"
    },
    "CreateMoviesDatasetGroup": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:personalize:createDatasetGroup",
      "Parameters": {
        "Name": "movies-personalize-dataset"
      },
      "ResultPath": "$.moviesDatasetGroup",
      "Next": "WaitMoviesDatasetGroupActive"
    },
    "WaitMoviesDatasetGroupActive": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "DescribeMoviesDatasetGroup"
    },
    "DescribeMoviesDatasetGroup": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:personalize:describeDatasetGroup",
      "Parameters": {
        "DatasetGroupArn.$": "$.moviesDatasetGroup.DatasetGroupArn"
      },
      "ResultPath": "$.moviesDatasetGroupStatus",
      "Next": "CheckMoviesDatasetGroupActive"
    },
    "CheckMoviesDatasetGroupActive": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.moviesDatasetGroupStatus.DatasetGroup.Status",
          "StringEquals": "ACTIVE",
          "Next": "CreateSeriesDatasetGroup"
        }
      ],
      "Default": "WaitMoviesDatasetGroupActive"
    },
    "CreateSeriesDatasetGroup": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:personalize:createDatasetGroup",
      "Parameters": {
        "Name": "series-personalize-dataset"
      },
      "ResultPath": "$.seriesDatasetGroup",
      "Next": "WaitSeriesDatasetGroupActive"
    },
    "WaitSeriesDatasetGroupActive": {
      "Type": "Wait",
      "Seconds": 30,
      "Next": "DescribeSeriesDatasetGroup"
    },
    "DescribeSeriesDatasetGroup": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:personalize:describeDatasetGroup",
      "Parameters": {
        "DatasetGroupArn.$": "$.seriesDatasetGroup.DatasetGroupArn"
      },
      "ResultPath": "$.seriesDatasetGroupStatus",
      "Next": "CheckSeriesDatasetGroupActive"
    },
    "CheckSeriesDatasetGroupActive": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.seriesDatasetGroupStatus.DatasetGroup.Status",
          "StringEquals": "ACTIVE",
          "Next": "CreateSchemas"
        }
      ],
      "Default": "WaitSeriesDatasetGroupActive"
    },
    "CreateSchemas": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "CreateMoviesItemsSchema",
          "States": {
            "CreateMoviesItemsSchema": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createSchema",
              "Parameters": {
                "Name": "MoviesItemsSchema",
                "Schema": "{\"type\":\"record\",\"name\":\"Items\",\"namespace\":\"com.amazonaws.personalize.schema\",\"fields\":[{\"name\":\"ITEM_ID\",\"type\":\"string\"},{\"name\":\"imdbID\",\"type\":\"string\"},{\"name\":\"Title\",\"type\":\"string\"},{\"name\":\"Year\",\"type\":\"string\"},{\"name\":\"Rated\",\"type\":\"string\",\"categorical\":true},{\"name\":\"Genre\",\"type\":\"string\",\"categorical\":true},{\"name\":\"Director\",\"type\":\"string\",\"categorical\":true},{\"name\":\"Actors\",\"type\":\"string\",\"categorical\":true},{\"name\":\"imdbRating\",\"type\":\"float\"}],\"version\":\"1.0\"}"
              },
              "ResultPath": "$.moviesItemsSchema",
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateSeriesItemsSchema",
          "States": {
            "CreateSeriesItemsSchema": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createSchema",
              "Parameters": {
                "Name": "SeriesItemsSchema",
                "Schema": "{\"type\":\"record\",\"name\":\"Items\",\"namespace\":\"com.amazonaws.personalize.schema\",\"fields\":[{\"name\":\"ITEM_ID\",\"type\":\"string\"},{\"name\":\"imdbID\",\"type\":\"string\"},{\"name\":\"Title\",\"type\":\"string\"},{\"name\":\"Year\",\"type\":\"string\"},{\"name\":\"Genre\",\"type\":\"string\",\"categorical\":true},{\"name\":\"Director\",\"type\":\"string\",\"categorical\":true},{\"name\":\"Actors\",\"type\":\"string\",\"categorical\":true},{\"name\":\"imdbRating\",\"type\":\"float\"},{\"name\":\"TotalSeasons\",\"type\":\"float\"}],\"version\":\"1.0\"}"
              },
              "ResultPath": "$.seriesItemsSchema",
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateInteractionsSchema",
          "States": {
            "CreateInteractionsSchema": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createSchema",
              "Parameters": {
                "Name": "InteractionsSchema",
                "Schema": "{\"type\":\"record\",\"name\":\"Interactions\",\"namespace\":\"com.amazonaws.personalize.schema\",\"fields\":[{\"name\":\"USER_ID\",\"type\":\"string\"},{\"name\":\"ITEM_ID\",\"type\":\"string\"},{\"name\":\"TIMESTAMP\",\"type\":\"long\"}],\"version\":\"1.0\"}"
              },
              "ResultPath": "$.interactionsSchema",
              "End": true
            }
          }
        }
      ],
      "ResultSelector": {
        "moviesItemsSchemaArn.$": "$[0].moviesItemsSchema.SchemaArn",
        "seriesItemsSchemaArn.$": "$[1].seriesItemsSchema.SchemaArn",
        "interactionsSchemaArn.$": "$[2].interactionsSchema.SchemaArn"
      },
      "ResultPath": "$.Schemas",
      "Next": "CreateDatasets"
    },
    "CreateDatasets": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "CreateMoviesItemsDataset",
          "States": {
            "CreateMoviesItemsDataset": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createDataset",
              "Parameters": {
                "Name": "movies-items-dataset",
                "DatasetGroupArn.$": "$.moviesDatasetGroup.DatasetGroupArn",
                "DatasetType": "ITEMS",
                "SchemaArn.$": "$.Schemas.moviesItemsSchemaArn"
              },
              "ResultPath": "$.moviesItemsDataset",
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateSeriesItemsDataset",
          "States": {
            "CreateSeriesItemsDataset": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createDataset",
              "Parameters": {
                "Name": "series-items-dataset",
                "DatasetGroupArn.$": "$.seriesDatasetGroup.DatasetGroupArn",
                "DatasetType": "ITEMS",
                "SchemaArn.$": "$.Schemas.seriesItemsSchemaArn"
              },
              "ResultPath": "$.seriesItemsDataset",
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateMoviesInteractionsDataset",
          "States": {
            "CreateMoviesInteractionsDataset": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createDataset",
              "Parameters": {
                "Name": "movies-interactions-dataset",
                "DatasetGroupArn.$": "$.moviesDatasetGroup.DatasetGroupArn",
                "DatasetType": "INTERACTIONS",
                "SchemaArn.$": "$.Schemas.interactionsSchemaArn"
              },
              "ResultPath": "$.moviesInteractionsDataset",
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateSeriesInteractionsDataset",
          "States": {
            "CreateSeriesInteractionsDataset": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createDataset",
              "Parameters": {
                "Name": "series-interactions-dataset",
                "DatasetGroupArn.$": "$.seriesDatasetGroup.DatasetGroupArn",
                "DatasetType": "INTERACTIONS",
                "SchemaArn.$": "$.Schemas.interactionsSchemaArn"
              },
              "ResultPath": "$.seriesInteractionsDataset",
              "End": true
            }
          }
        }
      ],
      "ResultSelector": {
        "moviesItemsDatasetArn.$": "$[0].moviesItemsDataset.DatasetArn",
        "seriesItemsDatasetArn.$": "$[1].seriesItemsDataset.DatasetArn",
        "moviesInteractionsDatasetArn.$": "$[2].moviesInteractionsDataset.DatasetArn",
        "seriesInteractionsDatasetArn.$": "$[3].seriesInteractionsDataset.DatasetArn"
      },
      "ResultPath": "$.Datasets",
      "Next": "WaitAllDatasetsActive"
    },
    "WaitAllDatasetsActive": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "RunImportJobs"
    },
    "RunImportJobs": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "ImportMoviesItems",
          "States": {
            "ImportMoviesItems": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createDatasetImportJob",
              "Parameters": {
                "JobName": "movies-items-import",
                "DatasetArn.$": "$.Datasets.moviesItemsDatasetArn",
                "RoleArn.$": "$.import_role",
                "DataSource": {
                  "DataLocation.$": "States.Format('s3://{}/processed/personalize_movies.csv',$.bucket)"
                }
              },
              "ResultPath": "$.moviesItemsImportJob",
              "Next": "WaitMoviesItemsImport"
            },
            "WaitMoviesItemsImport": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "CheckMoviesItemsImport"
            },
            "CheckMoviesItemsImport": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:describeDatasetImportJob",
              "Parameters": {
                "DatasetImportJobArn.$": "$.moviesItemsImportJob.DatasetImportJobArn"
              },
              "ResultPath": "$.moviesItemsImportStatus",
              "Next": "IsMoviesItemsImportActive"
            },
            "IsMoviesItemsImportActive": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.moviesItemsImportStatus.DatasetImportJob.Status",
                  "StringEquals": "ACTIVE",
                  "Next": "MoviesItemsImportDone"
                }
              ],
              "Default": "WaitMoviesItemsImport"
            },
            "MoviesItemsImportDone": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "ImportMoviesInteractions",
          "States": {
            "ImportMoviesInteractions": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createDatasetImportJob",
              "Parameters": {
                "JobName": "movies-interactions-import",
                "DatasetArn.$": "$.Datasets.moviesInteractionsDatasetArn",
                "RoleArn.$": "$.import_role",
                "DataSource": {
                  "DataLocation.$": "States.Format('s3://{}/initial_data/movies/movies_interactions.csv',$.bucket)"
                }
              },
              "ResultPath": "$.moviesInteractionsImportJob",
              "Next": "WaitMoviesInteractionsImport"
            },
            "WaitMoviesInteractionsImport": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "CheckMoviesInteractionsImport"
            },
            "CheckMoviesInteractionsImport": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:describeDatasetImportJob",
              "Parameters": {
                "DatasetImportJobArn.$": "$.moviesInteractionsImportJob.DatasetImportJobArn"
              },
              "ResultPath": "$.moviesInteractionsImportStatus",
              "Next": "IsMoviesInteractionsImportActive"
            },
            "IsMoviesInteractionsImportActive": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.moviesInteractionsImportStatus.DatasetImportJob.Status",
                  "StringEquals": "ACTIVE",
                  "Next": "MoviesInteractionsImportDone"
                }
              ],
              "Default": "WaitMoviesInteractionsImport"
            },
            "MoviesInteractionsImportDone": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "ImportSeriesItems",
          "States": {
            "ImportSeriesItems": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createDatasetImportJob",
              "Parameters": {
                "JobName": "series-items-import",
                "DatasetArn.$": "$.Datasets.seriesItemsDatasetArn",
                "RoleArn.$": "$.import_role",
                "DataSource": {
                  "DataLocation.$": "States.Format('s3://{}/processed/personalize_tvseries.csv',$.bucket)"
                }
              },
              "ResultPath": "$.seriesItemsImportJob",
              "Next": "WaitSeriesItemsImport"
            },
            "WaitSeriesItemsImport": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "CheckSeriesItemsImport"
            },
            "CheckSeriesItemsImport": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:describeDatasetImportJob",
              "Parameters": {
                "DatasetImportJobArn.$": "$.seriesItemsImportJob.DatasetImportJobArn"
              },
              "ResultPath": "$.seriesItemsImportStatus",
              "Next": "IsSeriesItemsImportActive"
            },
            "IsSeriesItemsImportActive": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.seriesItemsImportStatus.DatasetImportJob.Status",
                  "StringEquals": "ACTIVE",
                  "Next": "SeriesItemsImportDone"
                }
              ],
              "Default": "WaitSeriesItemsImport"
            },
            "SeriesItemsImportDone": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "ImportSeriesInteractions",
          "States": {
            "ImportSeriesInteractions": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createDatasetImportJob",
              "Parameters": {
                "JobName": "series-interactions-import",
                "DatasetArn.$": "$.Datasets.seriesInteractionsDatasetArn",
                "RoleArn.$": "$.import_role",
                "DataSource": {
                  "DataLocation.$": "States.Format('s3://{}/initial_data/series/series.csv',$.bucket)"
                }
              },
              "ResultPath": "$.seriesInteractionsImportJob",
              "Next": "WaitSeriesInteractionsImport"
            },
            "WaitSeriesInteractionsImport": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "CheckSeriesInteractionsImport"
            },
            "CheckSeriesInteractionsImport": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:describeDatasetImportJob",
              "Parameters": {
                "DatasetImportJobArn.$": "$.seriesInteractionsImportJob.DatasetImportJobArn"
              },
              "ResultPath": "$.seriesInteractionsImportStatus",
              "Next": "IsSeriesInteractionsImportActive"
            },
            "IsSeriesInteractionsImportActive": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.seriesInteractionsImportStatus.DatasetImportJob.Status",
                  "StringEquals": "ACTIVE",
                  "Next": "SeriesInteractionsImportDone"
                }
              ],
              "Default": "WaitSeriesInteractionsImport"
            },
            "SeriesInteractionsImportDone": {
              "Type": "Succeed"
            }
          }
        }
      ],
      "Next": "CreateSolutions"
    },
    "CreateSolutions": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "CreateMoviesSolution",
          "States": {
            "CreateMoviesSolution": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createSolution",
              "Parameters": {
                "Name": "movies-recommendation-solution",
                "RecipeArn.$": "$.movies_recipe",
                "DatasetGroupArn.$": "$.moviesDatasetGroup.DatasetGroupArn",
                "SolutionConfig": {
                  "AlgorithmHyperParameters": {
                    "training.max_user_history_length_percentile": "80",
                    "training.max_item_interaction_count_percentile": "80"
                  }
                }
              },
              "ResultPath": "$.moviesSolution",
              "Next": "CreateMoviesSolutionVersion"
            },
            "CreateMoviesSolutionVersion": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createSolutionVersion",
              "Parameters": {
                "SolutionArn.$": "$.moviesSolution.SolutionArn"
              },
              "ResultPath": "$.moviesSolutionVersion",
              "Next": "WaitMoviesSolutionVersionActive"
            },
            "WaitMoviesSolutionVersionActive": {
              "Type": "Wait",
              "Seconds": 60,
              "Next": "CheckMoviesSolutionVersion"
            },
            "CheckMoviesSolutionVersion": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:describeSolutionVersion",
              "Parameters": {
                "SolutionVersionArn.$": "$.moviesSolutionVersion.SolutionVersionArn"
              },
              "ResultPath": "$.moviesSolutionVersionStatus",
              "Next": "IsMoviesSolutionVersionActive"
            },
            "IsMoviesSolutionVersionActive": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.moviesSolutionVersionStatus.SolutionVersion.Status",
                  "StringEquals": "ACTIVE",
                  "Next": "MoviesSolutionDone"
                }
              ],
              "Default": "WaitMoviesSolutionVersionActive"
            },
            "MoviesSolutionDone": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "CreateSeriesSolution",
          "States": {
            "CreateSeriesSolution": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createSolution",
              "Parameters": {
                "Name": "series-recommendation-solution",
                "RecipeArn.$": "$.series_recipe",
                "DatasetGroupArn.$": "$.seriesDatasetGroup.DatasetGroupArn",
                "SolutionConfig": {
                  "AlgorithmHyperParameters": {
                    "training.max_user_history_length_percentile": "80",
                    "training.max_item_interaction_count_percentile": "80"
                  }
                }
              },
              "ResultPath": "$.seriesSolution",
              "Next": "CreateSeriesSolutionVersion"
            },
            "CreateSeriesSolutionVersion": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createSolutionVersion",
              "Parameters": {
                "SolutionArn.$": "$.seriesSolution.SolutionArn"
              },
              "ResultPath": "$.seriesSolutionVersion",
              "Next": "WaitSeriesSolutionVersionActive"
            },
            "WaitSeriesSolutionVersionActive": {
              "Type": "Wait",
              "Seconds": 60,
              "Next": "CheckSeriesSolutionVersion"
            },
            "CheckSeriesSolutionVersion": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:describeSolutionVersion",
              "Parameters": {
                "SolutionVersionArn.$": "$.seriesSolutionVersion.SolutionVersionArn"
              },
              "ResultPath": "$.seriesSolutionVersionStatus",
              "Next": "IsSeriesSolutionVersionActive"
            },
            "IsSeriesSolutionVersionActive": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.seriesSolutionVersionStatus.SolutionVersion.Status",
                  "StringEquals": "ACTIVE",
                  "Next": "SeriesSolutionDone"
                }
              ],
              "Default": "WaitSeriesSolutionVersionActive"
            },
            "SeriesSolutionDone": {
              "Type": "Succeed"
            }
          }
        }
      ],
      "Next": "CreateCampaigns"
    },
    "CreateCampaigns": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "CreateMoviesCampaign",
          "States": {
            "CreateMoviesCampaign": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createCampaign",
              "Parameters": {
                "Name": "movies-campaign",
                "SolutionVersionArn.$": "$.moviesSolutionVersion.SolutionVersionArn",
                "MinProvisionedTPS": 1
              },
              "ResultPath": "$.moviesCampaign",
              "Next": "WaitMoviesCampaignActive"
            },
            "WaitMoviesCampaignActive": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "CheckMoviesCampaign"
            },
            "CheckMoviesCampaign": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:describeCampaign",
              "Parameters": {
                "CampaignArn.$": "$.moviesCampaign.CampaignArn"
              },
              "ResultPath": "$.moviesCampaignStatus",
              "Next": "IsMoviesCampaignActive"
            },
            "IsMoviesCampaignActive": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.moviesCampaignStatus.Campaign.Status",
                  "StringEquals": "ACTIVE",
                  "Next": "MoviesCampaignDone"
                }
              ],
              "Default": "WaitMoviesCampaignActive"
            },
            "MoviesCampaignDone": {
              "Type": "Succeed"
            }
          }
        },
        {
          "StartAt": "CreateSeriesCampaign",
          "States": {
            "CreateSeriesCampaign": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createCampaign",
              "Parameters": {
                "Name": "series-campaign",
                "SolutionVersionArn.$": "$.seriesSolutionVersion.SolutionVersionArn",
                "MinProvisionedTPS": 1
              },
              "ResultPath": "$.seriesCampaign",
              "Next": "WaitSeriesCampaignActive"
            },
            "WaitSeriesCampaignActive": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "CheckSeriesCampaign"
            },
            "CheckSeriesCampaign": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:describeCampaign",
              "Parameters": {
                "CampaignArn.$": "$.seriesCampaign.CampaignArn"
              },
              "ResultPath": "$.seriesCampaignStatus",
              "Next": "IsSeriesCampaignActive"
            },
            "IsSeriesCampaignActive": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.seriesCampaignStatus.Campaign.Status",
                  "StringEquals": "ACTIVE",
                  "Next": "SeriesCampaignDone"
                }
              ],
              "Default": "WaitSeriesCampaignActive"
            },
            "SeriesCampaignDone": {
              "Type": "Succeed"
            }
          }
        }
      ],
      "Next": "CreateEventTrackers"
    },
    "CreateEventTrackers": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "CreateMoviesEventTracker",
          "States": {
            "CreateMoviesEventTracker": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createEventTracker",
              "Parameters": {
                "Name": "movies-event-tracker",
                "DatasetGroupArn.$": "$.moviesDatasetGroup.DatasetGroupArn"
              },
              "ResultPath": "$.moviesEventTracker",
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateSeriesEventTracker",
          "States": {
            "CreateSeriesEventTracker": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:personalize:createEventTracker",
              "Parameters": {
                "Name": "series-event-tracker",
                "DatasetGroupArn.$": "$.seriesDatasetGroup.DatasetGroupArn"
              },
              "ResultPath": "$.seriesEventTracker",
              "End": true
            }
          }
        }
      ],
      "Next": "UpdateSecret"
    },
    "UpdateSecret": {
      "Type": "Task",
      "Resource": "arn:aws:states:::aws-sdk:secretsmanager:putSecretValue",
      "Parameters": {
        "SecretId.$": "$.secret_id",
        "SecretString.$": "States.Format('{\"movies_campaign_arn\":\"{}\",\"series_campaign_arn\":\"{}\",\"movies_event_tracker_id\":\"{}\",\"series_event_tracker_id\":\"{}\"}',$.moviesCampaign.CampaignArn,$.seriesCampaign.CampaignArn,$.moviesEventTracker.TrackingId,$.seriesEventTracker.TrackingId)"
      },
      "End": true
    }
  }
}